// Each #kernel tells which function to compile; you can have many kernels
#pragma kernel CSMain

// Create a RenderTexture with enableRandomWrite flag and set it
// with cs.SetTexture
RWTexture2D<float4> Result;

struct Cube {
    float3 position;
    float4 color;
};

//RWStructuredBuffer<Cube> cubes;
float resolution;
float t;

[numthreads(8,8,1)]
void CSMain (uint2 id : SV_DispatchThreadID)
{
    // TODO: insert actual code here!

    float xPos = id.x / resolution;
    /*
    Cube cb = cubes[id.x];
    cb.color = float4(xPos, 0, 0, 1.0);

    cubes[id.x] = cb;
    */
    Result[id] = float4(xPos, (1 + sin(0.05 * t))/2, 0, 1);
}
